let e,t=document,n=Object,d=null,l=e=>e instanceof Node?e:t.createTextNode(e);export let add=(e,...t)=>t.flat(1/0).forEach((t=>e.appendChild(l(t))));export let tags=new Proxy(((e,...d)=>{let[l,...r]=d[0]?.constructor===n?d:[{},...d],o=t.createElement(e);return n.entries(l).forEach((([e,t])=>{t&&(e.startsWith("on")?o[e]=t:o.setAttribute(e,t))})),add(o,...r),o}),{get:(e,t)=>e.bind(d,t)});let r=(t,n)=>{n!==t.val&&(t.t?n===t.t&&(t.t=d,e.delete(t)):((t=>{e=(e??(setTimeout(o),new Set)).add(t)})(t),t.t=t.val),t.val=n)},o=()=>{let t=[...e];e=d,new Set(t.flatMap((e=>e.l=e.l.filter((e=>e.o.isConnected))))).forEach((e=>{let{o:t,u:n,i:d}=e;if(t.isConnected){let l=d(n.map((e=>e.val)),n.map((e=>e.t)),t,e.p);l!==t&&(t.replaceWith(l),e.o=l)}})),t.forEach((e=>e.t=d))};export let state=e=>{let t={val:e,l:[]};return[t,r.bind(d,t)]};export let bind=(e,t,n=(e=>l(t(...e))))=>{e=[e].flat();let d=l(t(...e.map((e=>e.val)))),r={u:e,o:d,i:n,p:t};return e.forEach((e=>e.l.push(r))),d};