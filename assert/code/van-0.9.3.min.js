let t,e=document,n=Object,s=null;class l{constructor(t){this.t=t,this.l=[],this.o=[]}get val(){return this.t}set val(e){let n=this;e!==n.t&&(n.i?e===n.i&&(n.i=s,t.delete(n)):((e=>{t=(t??(setTimeout(o),new Set)).add(e)})(n),n.i=n.t),n.t=e,n.o.forEach((t=>t())))}}export let state=t=>new l(t);export let add=(t,...n)=>n.flat(1/0).forEach((n=>{return t.appendChild((s=n)instanceof Node?s:s instanceof l?bind(s,(t=>e.createTextNode(t))):e.createTextNode(s));var s}));export let tags=new Proxy(((t,...s)=>{let[o,...r]=s[0]?.constructor===n?s:[{},...s],d=e.createElement(t);return n.entries(o).forEach((([t,e])=>{e&&(t.startsWith("on")?d[t]=e:e instanceof l?bind(e,(e=>(d[t]=e,d))):d.setAttribute(t,e))})),add(d,...r),d}),{get:(t,e)=>t.bind(s,e)});let o=()=>{let e=[...t];t=s,new Set(e.flatMap((t=>t.l=t.l.filter((t=>t.u?.isConnected))))).forEach((t=>{let{u:e,p:n,h:s}=t,l=s(...n.map((t=>t.t)),e,...n.map((t=>t.i)));l!==e&&(l?e.replaceWith(l):e.remove(),t.u=l)})),e.forEach((t=>t.i=s))};export let bind=(...t)=>{let e=t.slice(0,-1),n=t[t.length-1],s=n(...e.map((t=>t.t)));if(s instanceof Node){let t={p:e,u:s,h:n};return e.forEach((e=>e.l.push(t))),s}let l=state(s),o=()=>l.val=n(...e.map((t=>t.t)),l.t,...e.map((t=>t.i)));return e.forEach((t=>t.o.push(o))),l};