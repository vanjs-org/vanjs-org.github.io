let[isArr,doc]=[Array.isArray,document];let strToTextDom=e=>typeof e!=="object"?doc.createTextNode(e):e;export let add=(e,...t)=>{for(let r of t)isArr(r)?add(e,...r):e.appendChild(strToTextDom(r))};export let tag=(e,...t)=>{let[r,o]=typeof t[0]!=="object"||t[0]instanceof Node||isArr(t[0])?[{},t]:[t[0],t.slice(1)];let l=doc.createElement(e);for(let[e,t]of Object.entries(r))if(t)if(e.startsWith("on"))l[e]=t;else l.setAttribute(e,t);add(l,...o);return l};export let registerTags=(e,...t)=>{if(typeof e!=="object")return registerTags(window,e,...t);t.forEach((t=>e[t]=(...e)=>tag(t,...e)));return e};export let state=e=>({val:e,t:[]});export let bind=(e,t,r=(e=>strToTextDom(t(...e))))=>{if(!isArr(e))return bind([e],t,r);let o=strToTextDom(t(...e.map((e=>e.val))));let l={o:e,l:o,i:r};for(let t of e)t.t.push(l);return o};export let setState=(e,t)=>{if(!isArr(e))return setState([e],[t]);let r=new Set;for(let o=0;o<e.length;++o){let l=e[o];l.t=l.t.filter((e=>e.l.isConnected));if(t[o]!==l.val){l.p=l.val;l.val=t[o];for(let e of l.t)r.add(e)}}for(let e of r){let{l:t,o:r,i:o}=e;if(!t.isConnected)continue;let[l,f]=[r.map((e=>e.val)),r.map((e=>e.p))];let i=o(l,f,t);if(i!==t){t.replaceWith(i);e.l=i}}};