let e,t,n=Object,l=null,d=Object.getPrototypeOf,r=d({}),s=(e,t,n,l)=>(e??(setTimeout(n,l),new Set)).add(t),o={get val(){return this.t},set val(t){let n=this,l=n.t;t!==l&&(n.l===l?e=s(e,n,c):t===n.l&&e.delete(n),n.t=t,n.o.forEach((e=>e(t,l))))},onnew(e){this.o.push(e)}},i=e=>e.nodeType?e:new Text(e),u=(e,...t)=>t.flat(1/0).forEach((t=>e.appendChild(d(t)===o?w(t,(e=>e)):i(t)))),a=new Proxy(((e,...t)=>{let[l,...s]=d(t[0]??0)===r?t:[{},...t],i=document.createElement(e);return n.entries(l).forEach((([e,t])=>{let n=void 0!==i[e]?t=>i[e]=t:t=>i.setAttribute(e,t);d(t)===o?w(t,(e=>(n(e),i))):d(t)===r?w(...t.deps,((...e)=>(n(t.f(...e)),i))):n(t)})),u(i,...s),i}),{get:(e,t)=>e.bind(l,t)}),_=e=>e.i=e.i.filter((e=>e.u?.isConnected)),c=()=>{let t=[...e];e=l,new Set(t.flatMap(_)).forEach((e=>{let{_:t,u:n,g:d}=e,r=d(...t.map((e=>e.t)),n,...t.map((e=>e.l)));r!==n&&(r!==l?n.replaceWith(e.u=i(r)):(n.remove(),e.u=l))})),t.forEach((e=>e.l=e.t))},w=(...e)=>{let n=e.slice(0,-1),d=e[e.length-1],r=d(...n.map((e=>e.t)));if(r===l)return[];let o={_:n,u:i(r),g:d};return n.forEach((e=>{t=s(t,e,(()=>(t.forEach(_),t=l)),1e3),e.i.push(o)})),o.u};export default{add:u,tags:a,state:e=>({__proto__:o,t:e,l:e,i:[],o:[]}),bind:w};