let e=document,t=Object,l=t=>t instanceof Node?t:e.createTextNode(t);export let add=(e,...t)=>t.flat(1/0).forEach((t=>e.appendChild(l(t))));let d,n=(l,...d)=>{let[n,...o]=d[0]?.constructor===t?d:[{},...d],r=e.createElement(l);return t.entries(n).forEach((([e,t])=>{t&&(e.startsWith("on")?r[e]=t:r.setAttribute(e,t))})),add(r,...o),r};export let tags=(...e)=>t.fromEntries(e.map((e=>[e,n.bind(null,e)])));export let state=e=>({val:e,t:[]});export let bind=(e,t,d=(e=>l(t(...e))))=>{e=[e].flat();let n=l(t(...e.map((e=>e.val)))),o={l:e,o:n,p:d,u:t};return e.forEach((e=>e.t.push(o))),n};let o=e=>d=(d??(setTimeout(r,0),new Set)).add(e),r=()=>{let e=d;d=null,e.forEach((e=>{let{o:t,l:l,p:d}=e;if(t.isConnected){let n=d(l.map((e=>e.val)),l.map((e=>e.i)),t,e.u);n!==t&&(t.replaceWith(n),e.o=n)}}))};export let setState=(e,t)=>{e=[e].flat(),t=[t].flat(),e.forEach(((e,l)=>{e.t=e.t.filter((e=>e.o.isConnected)),t[l]!==e.val&&(e.i=e.val,e.val=t[l],e.t.forEach(o))}))};