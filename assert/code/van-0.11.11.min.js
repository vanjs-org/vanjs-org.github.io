let e,t,l,o=Object,n=Object.getPrototypeOf,r=(e,t,l,o)=>(e??(setTimeout(l,o),new Set)).add(t),s={get val(){return this.t},set val(e){let l=this,o=l.t;e!==o&&(l.l===o?t=r(t,l,_):e===l.l&&t.delete(l),l.t=e,l.o.forEach((t=>t(e,o))))},onnew(e){this.o.push(e)}},d=n(s),f=e=>e.nodeType?e:new Text(e),i=(e,...t)=>(t.flat(1/0).forEach((t=>e.appendChild(n(t)===s?w(t,(e=>e)):f(t)))),e),a=new Proxy(((t,...l)=>{let[r,...f]=n(l[0]??0)===d?l:[{},...l],a=document.createElement(t);for(let[t,l]of o.entries(r)){let o=a[t]!==e?e=>a[t]=e:e=>a.setAttribute(t,e);n(l)===s?w(l,(e=>(o(e),a))):n(l)===d?w(...l.deps,((...e)=>(o(l.f(...e)),a))):o(l)}return i(a,...f)}),{get:(t,l)=>t.bind(e,l)}),u=e=>e.i=e.i.filter((e=>e.u?.isConnected)),_=()=>{let l=[...t];t=e;for(let t of new Set(l.flatMap(u))){let{_:l,u:o}=t,n=t.g(...l.map((e=>e.t)),o,...l.map((e=>e.l)));n!==o&&(n!=e?o.replaceWith(t.u=f(n)):(o.remove(),t.u=e))}for(let e of l)e.l=e.t},w=(...t)=>{let o=t.pop(),n=o(...t.map((e=>e.t)));if(n==e)return[];let s={_:t,u:f(n),g:o};for(let o of t)l=r(l,o,(()=>(l.forEach(u),l=e)),1e3),o.i.push(s);return s.u};export default{add:i,tags:a,state:e=>({__proto__:s,t:e,l:e,i:[],o:[]}),bind:w};