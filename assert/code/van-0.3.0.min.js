export let add=(e,...t)=>{for(let r of t)if(typeof r!=="object")e.appendChild(document.createTextNode(r));else if(Array.isArray(r))add(e,...r);else e.appendChild(r)};export let tag=(e,...t)=>{let[r,o]=typeof t[0]!=="object"||t[0]instanceof Node||Array.isArray(t[0])?[{},t]:[t[0],t.slice(1)];let f=document.createElement(e);for(let[e,t]of Object.entries(r))if(t)if(e.startsWith("on"))f[e]=t;else f.setAttribute(e,t);add(f,...o);return f};export let registerTags=(e,...t)=>{if(typeof e!=="object")return registerTags(window,e,...t);for(let r of t)e[r]=(...e)=>tag(r,...e);return e};export let state=e=>({val:e,t:[]});let strToTextDom=e=>typeof e!=="object"?document.createTextNode(e):e;export let bind=(e,t,r=(e=>strToTextDom(t(...e))))=>{if(!Array.isArray(e))return bind([e],t,r);let o=strToTextDom(t(...e.map((e=>e.val))));let f={o:e,l:o,i:r};for(let t of e)t.t.push(f);return o};export let setState=(e,t)=>{if(!Array.isArray(e))return setState([e],[t]);let r=new Set;for(let o=0;o<e.length;++o){let f=e[o];f.t=f.t.filter((e=>e.l.isConnected));if(t[o]!==f.val){f.p=f.val;f.val=t[o];for(let e of f.t)r.add(e)}}for(let e of r){let{l:t,o:r,i:o}=e;if(!t.isConnected)continue;let[f,l]=[r.map((e=>e.val)),r.map((e=>e.p))];let n=o(f,l,t);if(n!==t){t.replaceWith(n);e.l=n}}};