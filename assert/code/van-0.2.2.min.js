export const add=(o,...t)=>{for(const e of t)if(typeof e!=="object")o.appendChild(document.createTextNode(e));else if(Array.isArray(e))add(o,...e);else o.appendChild(e)};export const tag=(o,...t)=>{const[e,n]=t.length===0||typeof t[0]!=="object"||t[0]instanceof Node||Array.isArray(t[0])?[{},t]:[t[0],t.slice(1)];const s=document.createElement(o);for(const[o,t]of Object.entries(e))if(t)if(o.startsWith("on"))s[o]=t;else s.setAttribute(o,t);add(s,...n);return s};export const registerTags=(o,...t)=>{for(const e of t)o[e]=(...o)=>tag(e,...o)};export const state=o=>({val:o,o:[]});const strToTextDom=o=>typeof o!=="object"?document.createTextNode(o):o;export const bind=(o,t,e=(o=>strToTextDom(t(...o))))=>{const n=strToTextDom(t(...o.map((o=>o.val))));const s={t:o,i:n,p:e};for(const t of o)t.o.push(s);return n};export const setState=(o,t)=>{if(!Array.isArray(o))return setState([o],[t]);const e=new Set;for(let n=0;n<o.length;++n){const s=o[n];s.o=s.o.filter((o=>o.i.isConnected));if(t[n]!==s.val){s.m=s.val;s.val=t[n];for(const o of s.o)e.add(o)}}for(const o of e){const{i:t,t:e,p:n}=o;if(!t.isConnected)continue;const[s,r]=[e.map((o=>o.val)),e.map((o=>o.m))];const c=n(s,r,t);if(c!==t){t.replaceWith(c);o.i=c}}};