let e,t,n,l=Object,r=Object.getPrototypeOf,s=(e,t,n,l)=>(e??(setTimeout(n,l),new Set)).add(t),d={get val(){return this.t},set val(e){let n=this,l=n.t;e!==l&&(n.l===l?t=s(t,n,c):e===n.l&&t.delete(n),n.t=e,n.o.forEach((t=>t(e,l))))},onnew(e){this.o.push(e)}},o=r(d),i=e=>e.nodeType?e:new Text(e),u=(e,...t)=>(t.flat(1/0).forEach((t=>e.appendChild(r(t)===d?w(t,(e=>e)):i(t)))),e),a=new Proxy(((t,...n)=>{let[s,...i]=r(n[0]??0)===o?n:[{},...n],a=document.createElement(t);return l.entries(s).forEach((([t,n])=>{let l=a[t]!==e?e=>a[t]=e:e=>a.setAttribute(t,e);r(n)===d?w(n,(e=>(l(e),a))):r(n)===o?w(...n.deps,((...e)=>(l(n.f(...e)),a))):l(n)})),u(a,...i)}),{get:(t,n)=>t.bind(e,n)}),_=e=>e.i=e.i.filter((e=>e.u?.isConnected)),c=()=>{let n=[...t];t=e,new Set(n.flatMap(_)).forEach((t=>{let{_:n,u:l,g:r}=t,s=r(...n.map((e=>e.t)),l,...n.map((e=>e.l)));s!==l&&(s!=e?l.replaceWith(t.u=i(s)):(l.remove(),t.u=e))})),n.forEach((e=>e.l=e.t))},w=(...t)=>{let[l]=t.splice(-1,1),r=l(...t.map((e=>e.t)));if(r==e)return[];let d={_:t,u:i(r),g:l};return t.forEach((t=>{n=s(n,t,(()=>(n.forEach(_),n=e)),1e3),t.i.push(d)})),d.u};export default{add:u,tags:a,state:e=>({__proto__:d,t:e,l:e,i:[],o:[]}),bind:w};