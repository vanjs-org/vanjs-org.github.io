let e,t=document,n=Object,l=null;class o{constructor(e){let t=this;t.t=e,t.l=[],t.o=[]}get val(){return this.t}set val(t){let n=this;t!==n.t&&(n.i?t===n.i&&(n.i=l,e.delete(n)):((t=>{e=(e??(setTimeout(r),new Set)).add(t)})(n),n.i=n.t),n.t=t,n.o.forEach((e=>e())))}}export let state=e=>new o(e);export let add=(e,...n)=>n.flat(1/0).forEach((n=>{return e.appendChild((l=n)instanceof Node?l:l instanceof o?bind(l,(e=>t.createTextNode(e))):t.createTextNode(l));var l}));export let tags=new Proxy(((e,...l)=>{let[r,...s]=l[0]?.constructor===n?l:[{},...l],d=t.createElement(e);return n.entries(r).forEach((([e,t])=>{t&&(e.startsWith("on")?d[e]=t:t instanceof o?bind(t,(t=>(d[e]=t,d))):d.setAttribute(e,t))})),add(d,...s),d}),{get:(e,t)=>e.bind(l,t)});let r=()=>{let t=[...e];e=l,new Set(t.flatMap((e=>e.l=e.l.filter((e=>e.u?.isConnected))))).forEach((e=>{let{u:t,p:n,m:l}=e,o=l(...n.map((e=>e.t)),t,...n.map((e=>e.i)));o!==t&&(o?t.replaceWith(o):t.remove(),e.u=o)})),t.forEach((e=>e.i=l))};export let bind=(...e)=>{let t=e.slice(0,-1),n=e[e.length-1],l=n(...t.map((e=>e.t)));if(l instanceof Node){let e={p:t,u:l,m:n};return t.forEach((t=>t.l.push(e))),l}let o=state(l),r=()=>o.val=n(...t.map((e=>e.t)),o.t,...t.map((e=>e.i)));return t.forEach((e=>e.o.push(r))),o};